[2025-02-01T00:11:44.501+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: test_gcs_json_parsing.download_and_parse_json manual__2025-02-01T00:11:43.350377+00:00 [queued]>
[2025-02-01T00:11:44.508+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: test_gcs_json_parsing.download_and_parse_json manual__2025-02-01T00:11:43.350377+00:00 [queued]>
[2025-02-01T00:11:44.508+0000] {taskinstance.py:1308} INFO - Starting attempt 1 of 2
[2025-02-01T00:11:44.517+0000] {taskinstance.py:1327} INFO - Executing <Task(PythonOperator): download_and_parse_json> on 2025-02-01 00:11:43.350377+00:00
[2025-02-01T00:11:44.521+0000] {standard_task_runner.py:57} INFO - Started process 445 to run task
[2025-02-01T00:11:44.523+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'test_gcs_json_parsing', 'download_and_parse_json', 'manual__2025-02-01T00:11:43.350377+00:00', '--job-id', '61', '--raw', '--subdir', 'DAGS_FOLDER/bigquery_test_dag.py', '--cfg-path', '/tmp/tmpn_odig_m']
[2025-02-01T00:11:44.525+0000] {standard_task_runner.py:85} INFO - Job 61: Subtask download_and_parse_json
[2025-02-01T00:11:44.557+0000] {task_command.py:410} INFO - Running <TaskInstance: test_gcs_json_parsing.download_and_parse_json manual__2025-02-01T00:11:43.350377+00:00 [running]> on host 3f33197bb456
[2025-02-01T00:11:44.616+0000] {taskinstance.py:1547} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='test_gcs_json_parsing' AIRFLOW_CTX_TASK_ID='download_and_parse_json' AIRFLOW_CTX_EXECUTION_DATE='2025-02-01T00:11:43.350377+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-02-01T00:11:43.350377+00:00'
[2025-02-01T00:11:44.623+0000] {base.py:73} INFO - Using connection ID 'google_cloud_default' for task execution.
[2025-02-01T00:11:44.625+0000] {logging_mixin.py:150} INFO - [INFO] GCS에서 naver_flight_data/flight_results_20250201.json 다운로드 중...
[2025-02-01T00:11:48.976+0000] {logging_mixin.py:150} INFO - [DEBUG] 다운로드된 데이터: [
    {
        "date": "20250201",
        "data": {
            "airlines": {},
            "airports": {},
            "fareTypes": {},
            "schedules": [],
            "fares": {},
            "errors": [
                {
                    "agtCode": "JTB016",
                    "errCode": "600",
                    "errMsg": "NO_FLIGHT"
                },
                {
                    "agtCode": "LTT017",
                    "errCode": "600",
                    "errMsg"
[2025-02-01T00:11:49.029+0000] {logging_mixin.py:150} INFO - [DEBUG] JSON 로드 성공: [{'date': '20250201', 'data': {'airlines': {}, 'airports': {}, 'fareTypes': {}, 'schedules': [], 'fares': {}, 'errors': [{'agtCode': 'JTB016', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'LTT017', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'MRT023', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'WEB001_SPLIT', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'WHY002_SPLIT', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'YEL009', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'NIT015', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}], 'carbonEmissionAverage': {'directFlightCarbonEmissionItineraryAverage': {'20250201ICNKIX': 17.994236363636364}, 'directFlightCarbonEmissionAverage': 17.994236363636364}}}, {'date': '20250202', 'data': {'airlines': {}, 'airports': {}, 'fareTypes': {}, 'schedules': [], 'fares': {}, 'errors': [{'agtCode': 'JTB016', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'WEB001_SPLIT', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'WHY002_SPLIT', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'YEL009', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}], 'carbonEmissionAverage': {'directFlightCarbonEmissionItineraryAverage': {'20250202ICNKIX': 19.000648148148144}, 'directFlightCarbonEmissionAverage': 19.000648148148144}}}, {'date': '20250203', 'data': {'airlines': {}, 'airports': {}, 'fareTypes': {}, 'schedules': [], 'fares': {}, 'errors': [{'agtCode': 'JTB016', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'LTT017', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'WEB001_SPLIT', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'WHY002_SPLIT', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}, {'agtCode': 'YEL009', 'errCode': '600', 'errMsg': 'NO_FLIGHT'}], 'carbonEmissionAverage': {'directFlightCarbonEmissionItineraryAverage': {'20250203ICNKIX': 17.994236363636364}, 'directFlightCarbonEmissionAverage': 17.994236363636364}}}]
[2025-02-01T00:11:49.082+0000] {base.py:73} INFO - Using connection ID 'google_cloud_default' for task execution.
[2025-02-01T00:11:49.120+0000] {taskinstance.py:1824} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 181, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 198, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/bigquery_test_dag.py", line 70, in download_and_parse_json
    parsed_data = process_json(json.dumps(flight_data_list))
  File "/opt/airflow/dags/phaser/pharshing.py", line 26, in process_json
    json_data = hook.download(bucket_name=bucket_name, object_name=file_path).decode("utf-8")
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/google/cloud/hooks/gcs.py", line 336, in download
    bucket = client.bucket(bucket_name)
  File "/home/airflow/.local/lib/python3.7/site-packages/google/cloud/storage/client.py", line 308, in bucket
    return Bucket(client=self, name=bucket_name, user_project=user_project)
  File "/home/airflow/.local/lib/python3.7/site-packages/google/cloud/storage/bucket.py", line 667, in __init__
    name = _validate_name(name)
  File "/home/airflow/.local/lib/python3.7/site-packages/google/cloud/storage/_helpers.py", line 100, in _validate_name
    raise ValueError("Bucket names must start and end with a number or letter.")
ValueError: Bucket names must start and end with a number or letter.
[2025-02-01T00:11:49.134+0000] {taskinstance.py:1350} INFO - Marking task as UP_FOR_RETRY. dag_id=test_gcs_json_parsing, task_id=download_and_parse_json, execution_date=20250201T001143, start_date=20250201T001144, end_date=20250201T001149
[2025-02-01T00:11:49.144+0000] {standard_task_runner.py:109} ERROR - Failed to execute job 61 for task download_and_parse_json (Bucket names must start and end with a number or letter.; 445)
[2025-02-01T00:11:49.204+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 1
[2025-02-01T00:11:49.241+0000] {taskinstance.py:2653} INFO - 0 downstream tasks scheduled from follow-on schedule check
